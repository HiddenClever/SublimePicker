buildscript {
    repositories {
        mavenCentral()
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0-beta03'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

def currentVersion = '2.1.6'

android {
    compileSdkVersion 28

    lintOptions {
        disable 'MissingTranslation'
        disable 'Instantiatable'
        disable 'ResourceType'
        abortOnError false
    }
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 4
        versionName currentVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:gridlayout-v7:28.0.0'
    implementation 'com.android.support:support-annotations:28.0.0'
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing{
    publications{
        mavenJava(MavenPublication){
            groupId 'com.github.sbgmobile'
            artifactId 'sublimepickerlibrary-sbgmobile'
            version currentVersion
            artifact(sourcesJar)
            artifact(javadocJar)
            artifact("$buildDir/outputs/aar/sublimepickerlibrary-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null)
                    {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    dryRun = false
    publish = true
    override = true
    configurations = ['archives']
    pkg {
        repo = 'SBGMobile-SublimePicker'
        name = 'SublimePicker'
        desc = 'A customizable view that provisions picking of a date, time & recurrence option, all from a single user-interface. You can also view \\\'SublimePicker\\\' as a collection of material-styled (API 23) DatePicker, TimePicker & RecurrencePicker, backported to API 14'
        userOrg = 'sbgmobile'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/SBGMobile/SublimePicker.git'
        websiteUrl = 'https://github.com/SBGMobile/SublimePicker'
        labels = ['android', 'datepicker']
        version {
            name = currentVersion
            released = new Date()
            vcsTag = 'v2.1.5'
            gpg{
                sign = true
            }
        }
    }
}
